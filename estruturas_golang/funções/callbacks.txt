callback é passar uma função como argumento.

Se uma função recebe outra como argumento isso é
chamado de callback. A função que está recebendo
fará alguma logica e utilizará a função que foi passada
em geral no final, mas pode ser no caso de um erro por ex.

Exemplo.:
a função dá um erro e chama a outra função como auxiliar 
ao que deve acontecer depois daquele erro ter acontecido.

ex.: de codigo
package main

import "fmt"

func main() {
	t := somenteImpares(soma, []int{1, 2, 3, 4, 5, 6, 7, 8, 9}...)
	fmt.Println(t)
}

func soma(x ...int) int {
	n := 0
	for _, v := range x {
		n += v
	}
	return n
}

func somenteImpares(f func(x ...int) int, y ...int) int {
	var slice []int
	for _, v := range y {
		if v%2 != 0 {
			slice = append(slice, v)
		}
	}
	total := f(slice...) // função de callback
	return total
}
